# -*- encoding: utf-8 -*-
# stub: manageiq-automation_engine 0.1.0 ruby lib

Gem::Specification.new do |s|
  s.name = "manageiq-automation_engine".freeze
  s.version = "0.1.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0".freeze) if s.respond_to? :required_rubygems_version=
  s.require_paths = ["lib".freeze]
  s.authors = ["ManageIQ Developers".freeze]
  s.date = "2019-05-08"
  s.description = "ManageIQ Automation Engine".freeze
  s.files = ["LICENSE.txt".freeze, "README.md".freeze, "Rakefile".freeze, "app/models/miq_ae_browser.rb".freeze, "app/models/miq_ae_class_compare_fields.rb".freeze, "app/models/miq_ae_class_copy.rb".freeze, "app/models/miq_ae_class_yaml.rb".freeze, "app/models/miq_ae_datastore".freeze, "app/models/miq_ae_datastore.rb".freeze, "app/models/miq_ae_datastore/xml_export.rb".freeze, "app/models/miq_ae_datastore/xml_import.rb".freeze, "app/models/miq_ae_datastore/xml_yaml_converter.rb".freeze, "app/models/miq_ae_domain.rb".freeze, "app/models/miq_ae_export.rb".freeze, "app/models/miq_ae_git_import.rb".freeze, "app/models/miq_ae_import.rb".freeze, "app/models/miq_ae_instance_compare_values.rb".freeze, "app/models/miq_ae_instance_copy.rb".freeze, "app/models/miq_ae_instance_yaml.rb".freeze, "app/models/miq_ae_method_compare.rb".freeze, "app/models/miq_ae_method_copy.rb".freeze, "app/models/miq_ae_method_yaml.rb".freeze, "app/models/miq_ae_password.rb".freeze, "app/models/miq_ae_yaml_export.rb".freeze, "app/models/miq_ae_yaml_export_consolidated.rb".freeze, "app/models/miq_ae_yaml_export_fs.rb".freeze, "app/models/miq_ae_yaml_export_zipfs.rb".freeze, "app/models/miq_ae_yaml_import.rb".freeze, "app/models/miq_ae_yaml_import_consolidated.rb".freeze, "app/models/miq_ae_yaml_import_fs.rb".freeze, "app/models/miq_ae_yaml_import_gitfs.rb".freeze, "app/models/miq_ae_yaml_import_zipfs.rb".freeze, "app/models/mixins/miq_ae_copy_mixin.rb".freeze, "lib/manageiq-automation_engine.rb".freeze, "lib/manageiq/automation_engine".freeze, "lib/manageiq/automation_engine/engine.rb".freeze, "lib/manageiq/automation_engine/syntax_check_result.rb".freeze, "lib/manageiq/automation_engine/syntax_checker.rb".freeze, "lib/manageiq/automation_engine/version.rb".freeze, "lib/miq_automation_engine".freeze, "lib/miq_automation_engine/engine".freeze, "lib/miq_automation_engine/engine/miq_ae_engine".freeze, "lib/miq_automation_engine/engine/miq_ae_engine.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/drb_remote_invoker.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_builtin_method.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_deserialize_workspace.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_domain_search.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_expression_method.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_method.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_object.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_object_lookup.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_path.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_playbook_method.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_reference.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_serialize_workspace.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_state_info.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_state_machine.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_uri.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_engine/miq_ae_workspace_runtime.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_event.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/deprecation.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service_converter.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service_front.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service_methods.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service_model_base.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service_model_legacy.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service_object.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service_object_common.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service_rbac.rb".freeze, "lib/miq_automation_engine/engine/miq_ae_method_service/miq_ae_service_vmdb.rb".freeze, "lib/miq_automation_engine/miq_ae_exception.rb".freeze, "lib/miq_automation_engine/service_models".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_account.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_authentication_rhsm.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_automation_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_automation_task.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_availability_zone.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_classification.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_cloud_network.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_cloud_object_store_container.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_cloud_object_store_object.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_cloud_resource_quota.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_cloud_subnet.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_cloud_tenant.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_cloud_volume.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_cloud_volume_backup.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_cloud_volume_snapshot.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_compliance.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_compliance_detail.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_configuration_location.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_configuration_organization.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_configuration_profile.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_configuration_script_base.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_configuration_script_source.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_configuration_tag.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_configured_system.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_build.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_build_pod.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_condition.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_definition.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_deployment.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_deployment_node.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_group.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_image.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_image_registry.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_limit.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_limit_item.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_node.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_project.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_quota.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_replicator.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_route.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_service.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_template.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_template_parameter.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_container_volume.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_conversion_host.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_customization_script.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_customization_spec.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_customization_template.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_disk.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_ems_cluster.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_ems_event.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_ems_folder.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_event_stream.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_ext_management_system.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_firewall_rule.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_flavor.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_floating_ip.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_generic_object.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_generic_object_definition.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_guest_application.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_guest_device.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_hardware.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_host.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_host_aggregate.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_iso_datastore.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_lan.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_load_balancer.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-amazon-storage_manager-s3-cloud_object_store_object.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-amazon-storage_manager-s3.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-ansible_tower-automation_manager-configuration_script.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-ansible_tower-automation_manager-configuration_script_payload.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-ansible_tower-automation_manager-configuration_workflow.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-ansible_tower-automation_manager-job.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-ansible_tower-automation_manager-workflow_job.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-ansible_tower-automation_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-ansible_tower-provider.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-automation_manager-configuration_script.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-automation_manager-configuration_script_payload.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-automation_manager-configured_system.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-automation_manager-inventory_group.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-automation_manager-inventory_root_group.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-automation_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-azure-cloud_manager-provision.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-azure-cloud_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-cloud_manager-orchestration_stack.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-cloud_manager-provision.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-cloud_manager-vm.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-cloud_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-configuration_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-container_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-embedded_ansible-automation_manager-configuration_script.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-embedded_ansible-automation_manager-configured_system.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-embedded_ansible-automation_manager-inventory.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-embedded_ansible-automation_manager-playbook.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-embedded_automation_manager-configuration_script.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-embedded_automation_manager-configuration_script_payload.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-embedded_automation_manager-configured_system.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-embedded_automation_manager-inventory_group.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-external_automation_manager-configuration_script.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-external_automation_manager-configuration_script_payload.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-external_automation_manager-configured_system.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-external_automation_manager-inventory_group.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-external_automation_manager-orchestration_stack.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-foreman-configuration_manager-configuration_profile.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-foreman-configuration_manager-configured_system.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-foreman-provider.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-lenovo-provider.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-network_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-cloud_manager-cloud_volume.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-cloud_manager-host_aggregate.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-cloud_manager-vm.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-cloud_manager-vnfd_template.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-cloud_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-infra_manager-orchestration_stack.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-infra_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-network_manager-cloud_network-private.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-network_manager-cloud_network-public.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-network_manager-cloud_network.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-network_manager-floating_ip.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-network_manager-network_port.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-network_manager-network_router.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-openstack-provider.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-provisioning_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-redhat-infra_manager-vm.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-redhat-infra_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-storage_manager-cinder_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-storage_manager-swift_manager.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-vmware-infra_manager-host_esx.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-vmware-infra_manager-provision.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-vmware-infra_manager-vm.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_manageiq-providers-vmware-network_manager-network_port.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_event.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_group.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_provision.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_provision_configured_system_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_provision_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_provision_task.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_request_task.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_server.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_miq_widget.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_network.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_network_port.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_network_router.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_notification.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_notification_type.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_operating_system_flavor.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_orchestration_stack.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_orchestration_stack_output.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_orchestration_stack_parameter.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_orchestration_stack_resource.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_orchestration_template.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_partition.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_physical_server.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_provider.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_pxe_image.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_pxe_image_type.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_pxe_server.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_security_group.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_ansible_tower.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_generic.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_orchestration.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_reconfigure_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_reconfigure_task.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_resource.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_retire_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_retire_task.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template_ansible_playbook.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template_ansible_tower.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template_catalog.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template_container_template.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template_orchestration.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template_provision_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template_provision_task.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template_transformation_plan_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_service_template_transformation_plan_task.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_snapshot.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_storage.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_storage_file.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_storage_profile.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_switch.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_tenant.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_tenant_quota.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_user.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_vm.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_vm_cloud.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_vm_cloud_reconfigure_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_vm_migrate_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_vm_migrate_task.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_vm_or_template.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_vm_reconfigure_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_vm_retire_request.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_vm_retire_task.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_volume.rb".freeze, "lib/miq_automation_engine/service_models/miq_ae_service_windows_image.rb".freeze, "lib/miq_automation_engine/service_models/mixins".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_custom_attribute_mixin.rb".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_ems_operations_mixin.rb".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_inflector_mixin.rb".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_miq_provision_mixin.rb".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_miq_provision_quota_mixin.rb".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_miq_request_mixin.rb".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_remove_from_vmdb_mixin.rb".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_retirement_mixin.rb".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_service_ansible_tower_mixin.rb".freeze, "lib/miq_automation_engine/service_models/mixins/miq_ae_service_service_orchestration_mixin.rb".freeze, "lib/tasks/README.md".freeze, "lib/tasks_private".freeze, "lib/tasks_private/spec.rake".freeze]
  s.homepage = "https://github.com/ManageIQ/manageiq-automation_engine".freeze
  s.licenses = ["Apache-2.0".freeze]
  s.rubygems_version = "2.6.14.1".freeze
  s.summary = "ManageIQ Automation Engine".freeze

  s.installed_by_version = "2.6.14.1" if s.respond_to? :installed_by_version

  if s.respond_to? :specification_version then
    s.specification_version = 4

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<rubyzip>.freeze, ["~> 1.2.2"])
      s.add_development_dependency(%q<codeclimate-test-reporter>.freeze, ["~> 1.0.0"])
      s.add_development_dependency(%q<simplecov>.freeze, [">= 0"])
    else
      s.add_dependency(%q<rubyzip>.freeze, ["~> 1.2.2"])
      s.add_dependency(%q<codeclimate-test-reporter>.freeze, ["~> 1.0.0"])
      s.add_dependency(%q<simplecov>.freeze, [">= 0"])
    end
  else
    s.add_dependency(%q<rubyzip>.freeze, ["~> 1.2.2"])
    s.add_dependency(%q<codeclimate-test-reporter>.freeze, ["~> 1.0.0"])
    s.add_dependency(%q<simplecov>.freeze, [">= 0"])
  end
end
