{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./app/javascript/provider-dialogs/modal.js","webpack:///./app/javascript/packs/provider-dialogs-common.js"],"names":["g","this","Function","eval","e","window","_typeof","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","title","arguments","length","undefined","__","Inner","_react2","default","createElement","div","$","appendTo","output","closed","removeId","overrides","addClicked","orig","Promise","resolve","then","saveClicked","cancelClicked","_reactRedux","Provider","store","ManageIQ","redux","_patternflyReact","Modal","show","onHide","onExited","Header","className","onClick","aria-hidden","aria-label","Icon","type","name","Title","Body","id","Footer","_formButtonsRedux2","callbackOverrides","modal","divs","parents","remove","closeModal","ReactDOM","render","__webpack_require__","apiCall","buttonData","dialogData","url","entity_name","record","recordId","API","post","action","action_name","data","response","errorMessage","error","message","add_flash","success_message","catch","dialogModal","dialogDefinition","elem","attr","inner","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","_inherits","React","Component","_createClass","key","value","miq_bootstrap","_modal2","dialog_title","angular","app","component","bindings","dialog","entityName","actionName","successMessage","template","controller","_this","refreshField","field","values","options","setDialogData","dispatch","payload","validations","isValid","$onInit","newRecord","pristine","formData","listenToRx","component_name","props","getReact","modal_title","reactModal","dialog_name","http","class","headers","Content-Type"],"mappings":"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","file":"manageiq-ui-classic/provider-dialogs-common-3933d351f3d1ff10716d.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Icon, Modal } from 'patternfly-react';\nimport { Provider } from 'react-redux';\nimport FormButtonsRedux from '../forms/form-buttons-redux';\n\nfunction closeModal(id) {\n  // this should have been div.remove();\n  // except patternfly modal does not render itself in its parent element\n  // but creates a new one in body, without any id\n  // so we're abusing the modal body to provide the id so that we can remove the right div when closing\n  // yay\n\n  const divs = $('#' + id).parents('div');\n  divs[divs.length - 1].remove(); // the div closest to body\n}\n\nexport default function renderModal(title = __(\"Modal\"), Inner = () => <div>Empty?</div>) {\n  const div = $('<div></div>').appendTo('body');\n  const removeId = 'provider-dialogs';\n\n  const close = () => closeModal(removeId);\n\n  const output = modal(title, Inner, close, removeId);\n\n  ReactDOM.render(output, div[0]);\n}\n\nfunction modal(title, Inner, closed, removeId) {\n  const overrides = {\n    addClicked: function(orig) {\n      Promise.resolve(orig()).then(closed);\n    },\n    saveClicked: function(orig) {\n      Promise.resolve(orig()).then(closed);\n    },\n    cancelClicked: function(orig) {\n      Promise.resolve(orig()).then(closed);\n    },\n    // don't close on reset\n  };\n\n  return (\n    <Provider store={ManageIQ.redux.store}>\n      <Modal\n        show={true}\n        onHide={closed}\n        onExited={closed}\n      >\n        <Modal.Header>\n          <button\n            className=\"close\"\n            onClick={closed}\n            aria-hidden=\"true\"\n            aria-label=\"Close\"\n          >\n            <Icon type=\"pf\" name=\"close\" />\n          </button>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Inner />\n          <div id={/* see closeModal */ removeId}></div>\n        </Modal.Body>\n        <Modal.Footer>\n          <FormButtonsRedux callbackOverrides={overrides} />\n        </Modal.Footer>\n      </Modal>\n    </Provider>\n  );\n}\n","import React from 'react';\nimport renderModal from '../provider-dialogs/modal';\n\nManageIQ.angular.app.component('providerDialogUser', {\n  bindings: {\n    dialog: '<',\n    entityName: '@',\n    actionName: '@',\n    successMessage: '@',\n  },\n  template: '<dialog-user dialog=\"$ctrl.dialog\" refresh-field=\"$ctrl.refreshField(field)\" on-update=\"$ctrl.setDialogData(data)\"></dialog-user>',\n  controller: [function() {\n    let formData = {};\n\n    this.refreshField = (field) => {\n      // dynamic fields are not supported in this context\n      return Promise.resolve({values:[], options:[]});\n    };\n\n    this.setDialogData = (data) => {\n      formData = data.data;\n\n      ManageIQ.redux.store.dispatch({\n        type: 'FormButtons.saveable',\n        payload: data.validations.isValid,\n      });\n    };\n\n    this.$onInit = () => {\n      ManageIQ.redux.store.dispatch({\n        type: 'FormButtons.init',\n        payload: {\n          newRecord: true,\n          pristine: false,\n          addClicked: () => {\n            apiCall(\n              {\n                entity_name:     this.entityName,\n                action_name:     this.actionName,\n                success_message: this.successMessage,\n              },\n              this.formData\n            );\n          },\n        },\n      });\n    };\n  }],\n});\n\nfunction reactModal(buttonData) {\n  const props = {\n    recordId: ManageIQ.record.recordId,\n  };\n\n  const Component = ManageIQ.component.getReact(buttonData.component_name);\n  const inner = () => <Component {...props} />;\n\n  renderModal(__(buttonData.modal_title), inner);\n}\n\nfunction apiCall(buttonData, dialogData) {\n  const url = `/api/${buttonData.entity_name}/${ManageIQ.record.recordId}`;\n  API.post(url, { action: buttonData.action_name, data: dialogData }).then((response) => {\n    let errorMessage;\n\n    if (response.error) {\n      if (response.error.message) {\n        errorMessage = response.error.message;\n      } else {\n        errorMessage = __('An unknown error has occurred.');\n      }\n      add_flash(errorMessage, 'error');\n      return;\n    }\n    add_flash(__(buttonData.success_message), 'success');\n  }).catch((error) => {\n    add_flash(__('An unknown error has occurred calling the API.'));\n  });\n}\n\n// careful: the dialogDefinigion is string, not an object here\nfunction dialogModal(dialogDefinition, buttonData) {\n  const elem = $('<provider-dialog-user></provider-dialog-user>');\n  elem.attr('dialog', dialogDefinition);\n  elem.attr('action-name', buttonData.action_name);\n  elem.attr('entity-name', buttonData.entity_name);\n  elem.attr('success-message', buttonData.success_message);\n\n  const id = 'angular-provider-dialog';\n\n  const inner = class extends React.Component {\n    componentDidMount() {\n      elem.appendTo(`#${id}`);\n      miq_bootstrap(`#${id}`);\n    }\n\n    render() {\n      return <div id={id} />;\n    }\n  };\n\n  renderModal(buttonData.dialog_title, inner);\n}\n\nwindow.listenToRx(function (buttonData) {\n  if (!buttonData || buttonData.controller !== 'provider_dialogs') {\n    return;\n  }\n\n  if (buttonData.component_name) {\n    reactModal(buttonData);\n  } else if (buttonData.dialog_name) {\n    http.post(\n      '/dashboard/dialog_definition',\n      { class: buttonData.class, name: buttonData.dialog_name },\n      { headers: { 'Content-Type': 'application/json' } },\n    ).then((response) => {\n      if (response.error) {\n        add_flash(__('Failed to fetch dialog definition'), 'error');\n        return;\n      }\n      dialogModal(response.dialog, buttonData);\n    });\n  } else if (buttonData.entity_name) {\n    apiCall(buttonData);\n  }\n});\n\n"],"sourceRoot":""}