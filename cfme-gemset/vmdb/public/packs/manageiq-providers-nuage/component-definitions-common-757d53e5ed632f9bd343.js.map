{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///../cfme-providers-nuage-c917358f07f2/app/javascript/utils/api.js","webpack:///../cfme-providers-nuage-c917358f07f2/app/javascript/utils/validators.js","webpack:///../cfme-providers-nuage-c917358f07f2/app/javascript/components/forms/nuage-cloud-subnet-form.jsx","webpack:///../cfme-providers-nuage-c917358f07f2/app/javascript/components/create-nuage-cloud-subnet-form.jsx","webpack:///../cfme-providers-nuage-c917358f07f2/app/javascript/packs/component-definitions-common.js"],"names":["g","this","Function","eval","e","window","_typeof","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","createSubnet","values","emsId","routerRef","API","post","action","resource","router_ref","then","response","forEach","res","add_flash","message","success","fetchRouter","routerId","handleApiError","self","err","msg","__","data","error","setState","loading","_reduxFormValidators","__webpack_require__","ip4Validator","addValidator","defaultMessage","validator","options","value","allValues","test","netmaskValidator","_reactFinalForm","_patternflyReact","_forms","_validators","NuageCloudSubnetForm","_ref","updateFormState","_react2","default","createElement","Spinner","size","Form","onSubmit","render","_ref2","handleSubmit","horizontal","FormSpy","onChange","state","Grid","fluid","Row","Col","xs","Field","name","component","FinalFormField","label","placeholder","validate","required","propTypes","PropTypes","func","isRequired","bool","defaultProps","_reactRedux","_api","CreateNuageCloudSubnetForm","props","_classCallCheck","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","handleFormStateUpdate","bind","React","Component","_this2","dispatch","type","payload","newRecord","pristine","addClicked","ManageIQ","record","recordId","router","ems_id","ems_ref","formState","valid","_nuageCloudSubnetForm2","connect","addReact"],"mappings":"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","file":"manageiq-providers-nuage/component-definitions-common-757d53e5ed632f9bd343.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export const createSubnet = (values, emsId, routerRef) => API.post(`/api/providers/${emsId}/cloud_subnets`, {\n  action: 'create',\n  resource: {...values, router_ref: routerRef},\n}).then(response => {\n  response['results'].forEach(res => window.add_flash(res.message, res.success ? 'success' : 'error'));\n});\n\nexport const fetchRouter = (routerId) => API.get(`/api/network_routers/${routerId}?attributes=ems_ref,name,ems_id`);\n\nexport const handleApiError = (self) => {\n  return (err) => {\n    let msg = __('Unknown API error');\n    if(err.data && err.data.error && err.data.error.message) {\n      msg = err.data.error.message\n    }\n    self.setState({loading: false, error: msg});\n  };\n};\n","import { addValidator } from 'redux-form-validators';\n\nexport const ip4Validator = addValidator({\n  defaultMessage: __('Must be IPv4 address'),\n  validator: function(options, value, allValues) {\n    return (/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/).test(value)\n  }\n});\n\nexport const netmaskValidator = addValidator({\n  defaultMessage: __('Must be netmask'),\n  validator: function(options, value, allValues) {\n    return (/^(((128|192|224|240|248|252|254)\\.0\\.0\\.0)|(255\\.(0|128|192|224|240|248|252|254)\\.0\\.0)|(255\\.255\\.(0|128|192|224|240|248|252|254)\\.0)|(255\\.255\\.255\\.(0|128|192|224|240|248|252|254)))$/).test(value)\n  }\n});\n","import React, { Component } from 'react';\nimport { Form, Field, FormSpy } from 'react-final-form';\nimport { Form as PfForm, Grid, Button, Col, Row, Spinner } from 'patternfly-react';\nimport PropTypes from 'prop-types';\nimport { required } from 'redux-form-validators';\n\nimport { FinalFormField, FinalFormTextArea, FinalFormSelect } from '@manageiq/react-ui-components/dist/forms';\nimport { ip4Validator, netmaskValidator } from '../../utils/validators'\n\nconst NuageCloudSubnetForm = ({loading, updateFormState}) => {\n  if(loading){\n    return (\n      <Spinner loading size=\"lg\" />\n    );\n  }\n\n  return (\n    <Form\n      onSubmit={() => {}} // handled by modal\n      render={({ handleSubmit }) => (\n        <PfForm horizontal>\n          <FormSpy onChange={state => updateFormState({ ...state, values: state.values })} />\n          <Grid fluid>\n            <Row>\n              <Col xs={12}>\n                <Field\n                  name=\"name\"\n                  component={FinalFormField}\n                  label={__('Name')}\n                  placeholder=\"Subnet Name\"\n                  validate={required({ msg: 'Name is required' })}\n                />\n              </Col>\n              <Col xs={12}>\n                <Field\n                  name=\"address\"\n                  component={FinalFormField}\n                  label={__('Address')}\n                  placeholder=\"100.100.100.0\"\n                  validate={ip4Validator()}\n                />\n              </Col>\n              <Col xs={12}>\n                <Field\n                  name=\"netmask\"\n                  component={FinalFormField}\n                  label={__('Netmask')}\n                  placeholder=\"255.255.255.0\"\n                  validate={netmaskValidator()}\n                />\n              </Col>\n              <Col xs={12}>\n                <Field\n                  name=\"gateway\"\n                  component={FinalFormField}\n                  label={__('Gateway')}\n                  placeholder=\"100.100.100.1\"\n                  validate={ip4Validator()}\n                />\n              </Col>\n              <hr />\n            </Row>\n          </Grid>\n        </PfForm>\n      )}\n    />\n  );\n};\n\nNuageCloudSubnetForm.propTypes = {\n  updateFormState: PropTypes.func.isRequired,\n  loading: PropTypes.bool\n};\n\nNuageCloudSubnetForm.defaultProps = {\n  loading: false,\n};\n\nexport default NuageCloudSubnetForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NuageCloudSubnetForm from './forms/nuage-cloud-subnet-form'\nimport { handleApiError, createSubnet, fetchRouter } from '../utils/api.js'\n\nclass CreateNuageCloudSubnetForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFormStateUpdate = this.handleFormStateUpdate.bind(this);\n    this.state = {\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FormButtons.init',\n      payload: {\n        newRecord: true,\n        pristine: true,\n        addClicked: () => createSubnet(this.state.values, this.state.emsId, this.state.routerRef)\n      }\n    });\n    fetchRouter(ManageIQ.record.recordId).then(router => {\n      this.setState({emsId: router.ems_id, routerRef: router.ems_ref, loading: false});\n    }, handleApiError(this));\n  }\n\n  handleFormStateUpdate(formState) {\n    this.props.dispatch({ type: 'FormButtons.saveable', payload: formState.valid });\n    this.props.dispatch({ type: 'FormButtons.pristine', payload: formState.pristine });\n    this.setState({ values: formState.values });\n  }\n\n  render() {\n    if(this.state.error) {\n      return <p>{this.state.error}</p>\n    }\n    return (\n      <NuageCloudSubnetForm\n        updateFormState={this.handleFormStateUpdate}\n        loading={this.state.loading}\n      />\n    );\n  }\n}\n\nCreateNuageCloudSubnetForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(CreateNuageCloudSubnetForm);\n","import CreateNuageCloudSubnetForm from '../components/create-nuage-cloud-subnet-form';\n\nManageIQ.component.addReact('CreateNuageCloudSubnetForm', CreateNuageCloudSubnetForm);\n"],"sourceRoot":""}